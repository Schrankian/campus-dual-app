name: Android Dev Release

on:
  push:
    branches: [ "dev" ]

  workflow_dispatch:

jobs:
  version:
    name: Create version number for Dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion for Dev
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          config: |
            mode: ContinuousDeployment
            branches:
              dev:
                tag: alpha
      - name: Create version.txt with nuGetVersion for Dev
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt for Dev
        uses: actions/upload-artifact@v4
        with:
          name: gitversion-dev
          path: version.txt

  build:
    name: Create Android Dev Build
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version.txt for Dev
        uses: actions/download-artifact@v4
        with:
          name: gitversion-dev
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version for Dev
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML for Dev
        run: sed -i -E 's/[0-9]+\.[0-9]+\.[0-9]+\+[0-9]+/${{ steps.version.outputs.content }}-dev+${{ github.run_number }}/g' pubspec.yaml
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties for Dev
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: "11"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"
          channel: 'stable'
          cache: true
      
      - name: Get dependencies for Dev
        run: flutter pub get

      - name: Start Android Apk Build for Dev
        run: flutter build apk
        
      - name: Start Android Appbundle Build for Dev
        run: flutter build appbundle

      - name: Upload Android Apk for Dev
        uses: actions/upload-artifact@v4
        with:
          name: android-dev-release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android Appbundle for Dev
        uses: actions/upload-artifact@v4
        with:
          name: android-dev-publish
          path: build/app/outputs/bundle/release/app-release.aab

  release:
    name: Create Dev Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get version.txt for Dev
        uses: actions/download-artifact@v4
        with:
          name: gitversion-dev
      - name: Get apk for Dev
        uses: actions/download-artifact@v4
        with:
          name: android-dev-release
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version for Dev
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Upload Apk to Dev release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          generateReleaseNotes: false
          prerelease: true
          artifacts: app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.content }}-dev
          name: Release ${{ steps.version.outputs.content }}-dev
          body: |
            This is an automated dev release by GitHub Actions.

  # publish:
  #   name: Upload to PlayStore (Dev)
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get Appbundle for Dev
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: android-dev-publish
  #     - name: Upload to PlayStore Alpha (Dev)
  #       uses: r0adkll/upload-google-play@v1
  #       with:
  #         serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
  #         track: alpha
  #         releaseFiles: app-release.aab
  #         packageName: net.fabianschuster.campus_dual_android_dev
